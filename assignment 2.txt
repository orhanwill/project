using System;

namespace ClassesAndObjects
{
    class Student     
    {
        int rollno;
        string name;
        int age;
        int marks;
        public void SetStudent(int rollno, string name, int marks, int age  )
        {

            this.rollno = rollno;
            this.name = name;
            this.marks = marks;
            this.age = age;

        }
        public void GetStudent()
        {
            Console.WriteLine("The Roll No is: {0} ", this.rollno);
            Console.WriteLine("The Name is: " + this.name + ". ");

            Console.WriteLine("The Marks are: " + this.marks + ". ");
            Console.WriteLine("The Age is: " + this.age + ". ");
        }
        static void Main(string[] args)
        {
            Console.WriteLine("Enter the Roll No:");
            int roll = int.Parse(Console.ReadLine());
            Console.WriteLine("Enter the name: ");
            string name = Console.ReadLine();
            Console.WriteLine("Enter the Marks:");
            int marks = int.Parse(Console.ReadLine());
            Console.WriteLine("Enter the Age:");
            int age = int.Parse(Console.ReadLine());

            Student Ali = new Student();
            Ali.SetStudent(roll,name, marks,age);
            Ali.GetStudent();

            Student Shoaib = new Student();
            Shoaib.SetStudent(roll, name, marks, age);
            Shoaib.GetStudent();

        }
    }
}
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
using System;

namespace School_Management_System___OPP
{
    public class Person
    {
        private string Name { get; set; }
        private DateTime Dob { get; set; }
        private string Address { get; set; }

        public Person()
        {
            Name = 
        }
    }
    public class Student : Person
    {
        public string Grade { get; set; }
        public Teacher ClassTeacher { get; set; }
        public Student(string name, DateTime dob, string address, string grade) : base(name, dob, address)
        {
            Grade = grade;
        }
        public void AssignTeacher(Teacher teacher)
        {
            ClassTeacher = teacher;
            Console.WriteLine(teacher.Name + " teacher assigned to the student " + this.Name);
        }
    }
    public class Teacher : Person
    {
        public string Subject { get; set; }
        public Teacher(string name, DateTime dob, string address, string subject) : base(name, dob, address)
        {
            Subject = subject;
        }
    }
    class Program
    {
        static void Main(string[] args)
        {
            // Now you can create instances of students and teachers, and assign teachers to students:
            
            Teacher mrSmith = new Teacher("Mr. Smith", new DateTime(1980, 1, 1), "123 St", "Maths");
            Student john = new Student("John", new DateTime(2010, 1, 1), "456 St", "5");

            john.AssignTeacher(mrSmith);

            Console.ReadKey();

            Person person = new Person("John", jbhdjhfjk, ujshdkjsh);
            
           
        }
    }
}



&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&



using System;
using System.Collections.Generic;

public class Animal
{
    public string Name { get; set; }
    public int Age { get; set; }
    public string Species { get; set; }

    public Animal(string name, int age, string species)
    {
        Name = name;
        Age = age;
        Species = species;
    }

    public virtual void Eat()
    {
        Console.WriteLine($"{Name} the {Species} is eating.");
    }
}

public class Lion : Animal
{
    public Lion(string name, int age) : base(name, age, "Lion")
    { }

    public override void Eat()
    {
        Console.WriteLine($"{Name} the Lion is eating meat.");
    }

    public void Roar()
    {
        Console.WriteLine($"{Name} the Lion is roaring!");
    }
}

public class Elephant : Animal
{
    public Elephant(string name, int age) : base(name, age, "Elephant")
    { }

    public override void Eat()
    {
        Console.WriteLine($"{Name} the Elephant is eating peanuts.");
    }

    public void Trumpet()
    {
        Console.WriteLine($"{Name} the Elephant is trumpeting!");
    }
}

public class Monkey : Animal
{
    public Monkey(string name, int age) : base(name, age, "Monkey")
    { }

    public override void Eat()
    {
        Console.WriteLine($"{Name} the Monkey is eating bananas.");
    }

    public void Climb()
    {
        Console.WriteLine($"{Name} the Monkey is climbing a tree!");
    }
}

public class Zoo
{
    public List<Animal> Animals { get; set; }

    public Zoo()
    {
        Animals = new List<Animal>();
    }

    public void AddAnimal(Animal animal)
    {
        Animals.Add(animal);
        Console.WriteLine($"{animal.Name} the {animal.Species} has been added to the zoo.");
    }

    public void FeedAllAnimals()
    {
        foreach (var animal in Animals)
        {
            animal.Eat();
        }
    }
}

class Program
{
    static void Main(string[] args)
    {
        Zoo zoo = new Zoo();

        Lion lion = new Lion("Simba", 5);
        Elephant elephant = new Elephant("Dumbo", 8);
        Monkey monkey = new Monkey("George", 3);

        zoo.AddAnimal(lion);
        zoo.AddAnimal(elephant);
        zoo.AddAnimal(monkey);
        zoo.FeedAllAnimals();


    }
}

&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&


using System;
using System.Collections.Generic;

public interface ISoundBehaviour
{
    void MakeSound();
}

public abstract class Animal
{
    public string Name { get; set; }
    public int Age { get; set; }
    public string Species { get; set; }

    public Animal(string name, int age, string species)
    {
        Name = name;
        Age = age;
        Species = species;
    }

    public abstract void Eat();
    public abstract void Eat(string food);
}

public class Lion : Animal, ISoundBehaviour
{
    public Lion(string name, int age) : base(name, age, "Lion")
    { }

    public override void Eat()
    {
        Console.WriteLine($"{Name} the Lion is eating meat.");
    }

    public override void Eat(string food)
    {
        Console.WriteLine($"{Name} the Lion is eating {food}.");
    }

    public void MakeSound()
    {
        Console.WriteLine($"{Name} the Lion is roaring!");
    }
}

public class Elephant : Animal, ISoundBehaviour
{
    public Elephant(string name, int age) : base(name, age, "Elephant")
    { }

    public override void Eat()
    {
        Console.WriteLine($"{Name} the Elephant is eating peanuts.");
    }

    public override void Eat(string food)
    {
        Console.WriteLine($"{Name} the Elephant is eating {food}.");
    }

    public void MakeSound()
    {
        Console.WriteLine($"{Name} the Elephant is trumpeting!");
    }
}

public class Monkey : Animal, ISoundBehaviour
{
    public Monkey(string name, int age) : base(name, age, "Monkey")
    { }

    public override void Eat()
    {
        Console.WriteLine($"{Name} the Monkey is eating bananas.");
    }

    public override void Eat(string food)
    {
        Console.WriteLine($"{Name} the Monkey is eating {food}.");
    }

    public void MakeSound()
    {
        Console.WriteLine($"{Name} the Monkey is hooting!");
    }
}

public class Zoo
{
    public List<Animal> Animals { get; set; }

    public Zoo()
    {
        Animals = new List<Animal>();
    }

    public void AddAnimal(Animal animal)
    {
        Animals.Add(animal);
        Console.WriteLine($"{animal.Name} the {animal.Species} has been added to the zoo.");
    }

    public void FeedAllAnimals()
    {
        foreach (var animal in Animals)
        {
            animal.Eat();
        }
    }
}

class Program
{
    static void Main(string[] args)
    {
        Zoo zoo = new Zoo();

        Lion lion = new Lion("Simba", 5);
        Elephant elephant = new Elephant("Dumbo", 8);
        Monkey monkey = new Monkey("George", 3);

        zoo.AddAnimal(lion);
        zoo.AddAnimal(elephant);
        zoo.AddAnimal(monkey);

        zoo.FeedAllAnimals();

        lion.MakeSound();
        elephant.MakeSound();
        monkey.MakeSound();

        lion.Eat("steak");
        elephant.Eat("apples");
        monkey.Eat("mangoes");

        Console.ReadKey();
    }
}